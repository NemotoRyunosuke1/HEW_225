//=============================================================================
//
// ステージボタン [stageButton.cpp]
// Author : 根本龍之介
//
//=============================================================================

#include "stageButton.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_BUTTON (5)

//=============================================================================
// コンストラクタ
//=============================================================================
StageButton::StageButton()
{
	// ボタンメモリ確保
	m_pButton = new Button[MAX_BUTTON];
	m_pButton[0].CreateButton(XMFLOAT3(300.0f, 300.0f,0.0f), XMFLOAT3(0.0f, 0.0f, 0.0f)   ,0);
	m_pButton[1].CreateButton(XMFLOAT3(300.0f, 300.0f,0.0f), XMFLOAT3(-400.0f, 0.0f, 0.0f),1);
	m_pButton[2].CreateButton(XMFLOAT3(300.0f, 300.0f,0.0f), XMFLOAT3( 400.0f, 0.0f, 0.0f),2);
}
//=============================================================================
// デストラクタ
//=============================================================================
StageButton::~StageButton()
{
	// ボタンメモリ開放
	delete[] m_pButton;
}
//=============================================================================
// 更新処理
//=============================================================================
void StageButton::Update()
{
	for (int i = 0; i < MAX_BUTTON; i++)
	{
		// 使われていなかったら処理しない
		if (!m_pButton[i].GetUse())continue;

		m_pButton[i].Update();
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void StageButton::Draw()
{
	for (int i = 0; i < MAX_BUTTON; i++)
	{
		// 使われていなかったら処理しない
		if (!m_pButton[i].GetUse())continue;

		m_pButton[i].Draw();
	}
}